name: ci

on:
  pull_request:
  release:
    types: [published]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get image repositories
        run: |
          echo DOCKER_IMAGE_REPOSITORY=$(echo maplarge/${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
          echo GHCR_IMAGE_REPOSITORY=$(echo ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: Get the release
        run: echo RELEASE=${GITHUB_REF/refs\/tags\//} >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_IMAGE_REPOSITORY }}
            ${{ env.GHCR_IMAGE_REPOSITORY }}
          tags: |
            type=raw,value=${{ env.RELEASE }}
            type=raw,value=latest

      - name: Build on Pull Request
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          pull: true
          push: false
          tags: 'dev'
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and Push Docker Image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}